import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--list'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    }
    catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--long'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

def getAuthorEmail = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'config', '--global', '--get', 'user.email'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return "";
    }
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy_MMdd_HHmm")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId = "tw.haotek.app.e7go"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode getVersionCode()
        versionName getVersionName()
        buildConfigField "String", "AUTHOR_EMAIL", "\"" + getAuthorEmail() + "\""
        multiDexEnabled true
    }

    productFlavors {
        e7go {
            applicationId = "tw.haotek.app.e7go"
            versionCode getVersionCode()
            versionName getVersionName()
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        buildTypes {
            release {
                minifyEnabled false //proguard  Yes / No
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = "${variant.productFlavors[0].name}_${variant.productFlavors[0].versionName}.apk"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }

        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/ASL2.0'
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/LGPL2.1'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/notice.txt'
        }
    }

    dependencies {
        compile fileTree(dir: 'libs', include: ['*.jar'])
        testCompile 'junit:junit:4.12'
        compile 'com.android.support:design:25.3.0'
        compile 'com.android.support:appcompat-v7:25.3.0'
        compile 'com.android.support:recyclerview-v7:25.3.0'
        compile 'com.android.support:support-v13:25.3.0'
//    //Support lib
        compile 'com.squareup.okhttp:okhttp:+'
        compile 'com.squareup.picasso:picasso:+'
        compile 'com.google.code.gson:gson:+'
        compile 'com.squareup.okhttp:okhttp-urlconnection:+'
        compile 'com.telly:mrvector:+'
        compile "org.jboss.netty:netty:latest.integration"
        compile 'me.relex:circleindicator:1.1.5@aar'
    }
}